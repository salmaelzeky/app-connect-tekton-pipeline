

BROKER SCHEMA esb.tawakkalna.auth.esqls

CREATE COMPUTE MODULE GetPersonDetailsNIC_TransformResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--TODO IF RESPONSE FAILS: THROW
		DECLARE Response REFERENCE TO InputRoot.JSON.Data.PersonDtlsInqRs.MsgRsHdr.ResponseStatus;
		IF Response.StatusCode = 'I000000' THEN
			--call stored procesure to insert data:
			CALL CopyEntireMessage();
			--Delete prvious call to SP
			DELETE FIELD Environment.Variables.StoredProcedureRq;
			DELETE FIELD Environment.Variables.StoredProcedureRs;
			DELETE FIELD OutputRoot.XMLNSC.MsgRsHdr.ResponseStatus;
			-- Declare request reference
			CREATE FIELD Environment.Variables.StoredProcedureRq.CustomerProfileManageRq;
			DECLARE Request REFERENCE TO Environment.Variables.StoredProcedureRq.CustomerProfileManageRq;
			-- Declare response reference
			CREATE FIELD Environment.Variables.StoredProcedureRs.CustomerProfileManageRs;
			DECLARE Response REFERENCE TO Environment.Variables.StoredProcedureRs.CustomerProfileManageRs;
			-- Input parameters preparation
			--Set MSGID
			SET Request.MsgId = Environment.Variables.Header.MsgId;
			SET Request.RqUID = Environment.Variables.Header.RqUID;
			SET Request.SCId = Environment.Properties.SCId;
			SET Request.UserId = Environment.Variables.Header.UserId;


			SET Request.FuncId = COALESCE(Environment.Variables.CustomerProfileFuncId, 'INSERT');

			DECLARE UserBasicInfoNIC REFERENCE TO InputRoot.JSON.Data.PersonDtlsInqRs.Body.PersonRec;

			SET Request.SocialId = Environment.NationalId;

			SET Request.FirstName = UserBasicInfoNIC.NameInfo.FirstName;
			SET Request.SecondName = UserBasicInfoNIC.NameInfo.SecondName;
			SET Request.ThirdName = UserBasicInfoNIC.NameInfo.ThirdName;
			SET Request.LastName = UserBasicInfoNIC.NameInfo.LastName;
			SET Request.FullName = UserBasicInfoNIC.NameInfo.FullName;
			SET Request.NationalityArabic = UserBasicInfoNIC.NationalityInfo.NationalityDescAr;
			SET Request.NationalityEnglish = UserBasicInfoNIC.NationalityInfo.NationalityCode;
			SET Request.BirthDateGreg = UserBasicInfoNIC.BirthDt;
			SET Request.BirthDateHijri = UserBasicInfoNIC.BirthDtHijri;

			IF(UserBasicInfoNIC.MappedGenderInfo.GenderCode = 'MALE')THEN
			SET Request.Gender = 'ذكر';
		ELSEIF (UserBasicInfoNIC.MappedGenderInfo.GenderCode = 'FEMALE')THEN
			SET Request.Gender = 'أنثى';
		END IF;
		SET Request.ClientDate = Environment.Variables.Header.ClientDt;

		DECLARE MobileAppSchemaName CHARACTER Environment.Properties.MobileAppSchemaName;
		-- Stored Procedure parameters preparation
		CALL MANAGE_CUSTOMER_PROFILE(
		Request.MsgId,
		COALESCE(Request.RqUID, ''),
		COALESCE(Request.DbgMd, ''),
		COALESCE(Request.SCId, ''),
		COALESCE(Request.FuncId, ''),
		COALESCE(Request.RqMode, ''),
		COALESCE(Request.CustLangPref, ''),
		Request.UserId,
		COALESCE(Request.ClientDate, ''),
		COALESCE(Request.SocialId, ''),
		COALESCE(Request.SecurityInfo, ''),
		COALESCE(Request.SecurityInfoType, ''),
		Response.StatusCode,
		Response.StatusDesc,
		COALESCE(Request.FirstName, ''),
		COALESCE(Request.SecondName, ''),
		COALESCE(Request.ThirdName, ''),
		COALESCE(Request.LastName, ''),
		COALESCE(Request.FullName, ''),
		COALESCE(Request.MobileNumber, ''),
		COALESCE(Request.Email, ''),
		COALESCE(Request.ISAMProfileId, ''),
		COALESCE(Request.CRMProfileId, ''),
		COALESCE(Request.NationalityArabic, ''),
		COALESCE(Request.NationalityEnglish, ''),
		COALESCE(Request.BirthDateGreg, ''),
		COALESCE(Request.BirthDateHijri, ''),
		COALESCE(Request.BirthPlace, ''),
		COALESCE(Request.Gender, ''),
		COALESCE(Request.DeviceToken, '')
		)IN Database.{MobileAppSchemaName};

		IF Response.StatusCode = 'I000000' THEN
			SET OutputRoot.JSON.MsgRsHdr.ResponseStatus.StatusCode = Response.StatusCode;
			SET OutputRoot.JSON.MsgRsHdr.ResponseStatus.StatusDesc = Response.StatusDesc;
		ELSE
			THROW USER EXCEPTION VALUES(Response.StatusCode,Response.StatusDesc);
		END IF;
	ELSE
		THROW USER EXCEPTION VALUES(Response.StatusCode);
	END IF;
	RETURN TRUE;
END;
-- Stored Procedure Signature
Create Procedure MANAGE_CUSTOMER_PROFILE(
IN P_MSG_ID CHARACTER,
IN P_RQ_UID CHARACTER,
IN P_DEBUG_MODE CHARACTER,
IN P_SC_ID CHARACTER,
IN P_FUN_ID CHARACTER,
IN P_RQ_MODE CHARACTER,
IN P_PREF_LANG CHARACTER,
INOUT P_USER_ID CHARACTER,
IN P_CLIENT_DATE CHARACTER,
IN P_SOCIAL_ID CHARACTER,
IN P_SEC_INFO CHARACTER,
IN P_SEC_INFO_TYPE CHARACTER,
OUT P_STATUS_CODE CHARACTER,
OUT P_STATUS_DESC CHARACTER,
IN P_FIRST_NAME CHARACTER,
IN P_SECOND_NAME CHARACTER,
IN P_THIRD_NAME CHARACTER,
IN P_LAST_NAME CHARACTER,
IN P_FULL_NAME CHARACTER,
IN P_MOBILE_NO CHARACTER,
IN P_EMAIL CHARACTER,
IN P_ISAM_PROFILE_ID CHARACTER,
IN P_CRM_PROFILE_ID CHARACTER,
IN P_NATIONALITY_ARABIC CHARACTER,
IN P_NATIONALITY_ENGLISH CHARACTER,
IN P_BIRTH_DATE_GREG CHARACTER,
IN P_BIRTH_DATE_HIJRI CHARACTER,
IN P_BIRTH_PLACE CHARACTER,
IN P_GENDER CHARACTER,
IN P_DEVICE_TOKEN CHARACTER

) LANGUAGE DATABASE
EXTERNAL NAME "MANAGE_CUSTOMER_PROFILE";

CREATE PROCEDURE CopyEntireMessage() BEGIN
	SET OutputRoot = InputRoot;
END;
END MODULE;